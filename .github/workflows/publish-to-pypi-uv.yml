name: Publish Python to PyPI

on: push

# env:
#   LANG: 'pt_BR.UTF-8'

jobs:
  build-n-publish:
    name: Build and Publish Python Poetryüêç distributions üì¶ to PyPI

    runs-on: ubuntu-latest

    steps:
      # - name: pt_BR.UTF-8
      #   run: |
      #     sudo locale-gen pt_BR.UTF-8
      #     sudo update-locale LANG=pt_BR.UTF-8

      # - name: date
      #   run: |
      #     date

      # - name: Locale
      #   run: |
      #     locale -a

      # https://stackoverflow.com/questions/36394101/pip-install-locale-error-unsupported-locale-setting
      # - name: dsdsd
      #   run: |
      #     export LC_ALL=C

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          # python-version-file: '.python-version'

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      # For example, using `pytest`
      # - name: Run tests
      #   run: uv run pytest tests

      # - name: Set up Python
      #   run: uv python install

      # # load cached venv if cache exists
      # - name: Load cached venv
      #   id: cached-poetry-dependencies
      #   uses: actions/cache@v4
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # install dependencies if cache does not exist
      # - name: Install dependencies
      #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #   run: poetry install --no-interaction --no-root --with docs

      # # install your root project, if required
      # - name: Install project
      #   run: poetry install --no-interaction

      # - name: Set PyPI
      #   run: poetry config pypi-token.pypi "${{ secrets.PYPI_API_TOKEN }}"

      # - name: Publish package
      #   run: poetry publish --build

      - name: Build
        run: uv build

      - name: Publish
        run: uv publish -t ${{ secrets.PYPI_TOKEN }}
